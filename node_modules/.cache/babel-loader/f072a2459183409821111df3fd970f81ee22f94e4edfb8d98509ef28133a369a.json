{"ast":null,"code":"import axios from \"axios\";\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\n/** make API requests */\n\n/** to get username from tok */\n\n/** aunthenticate function */\nexport async function authenticate(username) {\n  try {\n    return await axios.post(\"/api/authenticate\", {\n      username\n    });\n  } catch (error) {\n    return {\n      error: \"Username doesn't exist...!\"\n    };\n  }\n}\n\n/** get user details */\nexport async function getUser({\n  username\n}) {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/user/Z${username}`);\n    return {\n      data\n    };\n  } catch (error) {\n    return {\n      error: \"Password does'nt Match...!\"\n    };\n  }\n}\n\n/** register user function */\nexport async function registerUser(credentials) {\n  try {\n    const {\n      data: {\n        msg\n      },\n      status\n    } = await axios.post(`/api/register`, credentials);\n    let {\n      username,\n      email\n    } = credentials;\n    if (status === 201) {\n      await axios.post(\"/api/registerMail\", {\n        username,\n        userEmail: email,\n        text: msg\n      });\n    }\n    return Promise.resolve(msg);\n  } catch (error) {\n    return Promise.reject({\n      error\n    });\n  }\n}\n\n/**login function */\n\nexport async function verifyPassword({\n  username,\n  password\n}) {\n  try {\n    if (username) {\n      const {\n        data\n      } = await axios.post(\"/api/login\", {\n        username,\n        password\n      });\n      return Promise.resolve({\n        data\n      });\n    }\n  } catch (error) {\n    return Promise.reject({\n      error: \"Password doesn't Match...! \"\n    });\n  }\n}\n\n/** update user profile function */\nexport async function updateUser(response) {\n  try {\n    const token = await localStorage.getItem(\"token\");\n    const data = await axios.put(\"/api/updateUser\", response, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return Promise.resolve({\n      data\n    });\n  } catch (error) {\n    return Promise.reject({\n      error: \"Couldn't Update Profile..!\"\n    });\n  }\n}\n\n/** generate OTP */\nexport async function generateOTP(username) {\n  try {\n    const {\n      data: {\n        code\n      },\n      status\n    } = await axios.get(\"/api/generateOTP\", {\n      params: {\n        username\n      }\n    });\n    // send mail with the OTP\n    if (status === 201) {\n      let {\n        data: {\n          email\n        }\n      } = await getUser({\n        username\n      });\n      let text = `Your Password Recovery OTP is ${code}.Verify and recover your password.`;\n      await axios.post(\"/api/registerMail\", {\n        username,\n        userEmail: email,\n        text,\n        subject: \"Password Recovery OTP\"\n      });\n    }\n    return Promise.resolve(code);\n  } catch (error) {\n    return Promise.reject({\n      error\n    });\n  }\n}\n/** verify OTP */\nexport async function verifyOTP({\n  username,\n  code\n}) {\n  try {\n    const {\n      data,\n      status\n    } = await axios.get(\"/api/verifyOTP\", {\n      params: {\n        username,\n        code\n      }\n    });\n    return {\n      data,\n      status\n    };\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}\n\n/** reset password */\nexport async function resetPassword({\n  username,\n  password\n}) {\n  try {\n    const {\n      data,\n      status\n    } = await axios.put(\"/api/resetPassword\", {\n      username,\n      password\n    });\n    return Promise.resolve({\n      data,\n      status\n    });\n  } catch (error) {\n    return Promise.reject({\n      error\n    });\n  }\n}","map":{"version":3,"names":["axios","defaults","baseURL","process","env","REACT_APP_SERVER_DOMAIN","authenticate","username","post","error","getUser","data","get","registerUser","credentials","msg","status","email","userEmail","text","Promise","resolve","reject","verifyPassword","password","updateUser","response","token","localStorage","getItem","put","headers","Authorization","generateOTP","code","params","subject","verifyOTP","resetPassword"],"sources":["D:/Nodejs/BACKEND/ZENCLASS_NODE_TASK/RESTPASSWORD/login_app/client/src/helper/helper.js"],"sourcesContent":["import axios from \"axios\";\r\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\r\n/** make API requests */\r\n\r\n/** to get username from tok */\r\n\r\n\r\n/** aunthenticate function */\r\nexport async function authenticate(username) {\r\n  try {\r\n    return await axios.post(\"/api/authenticate\", { username });\r\n  } catch (error) {\r\n    return { error: \"Username doesn't exist...!\" };\r\n  }\r\n}\r\n\r\n/** get user details */\r\nexport async function getUser({ username }) {\r\n  try {\r\n    const { data } = await axios.get(`/api/user/Z${username}`);\r\n    return { data };\r\n  } catch (error) {\r\n    return { error: \"Password does'nt Match...!\" };\r\n  }\r\n}\r\n\r\n/** register user function */\r\nexport async function registerUser(credentials) {\r\n  try {\r\n    const {\r\n      data: { msg },\r\n      status,\r\n    } = await axios.post(`/api/register`, credentials);\r\n    let { username, email } = credentials;\r\n    if (status === 201) {\r\n      await axios.post(\"/api/registerMail\", {\r\n        username,\r\n        userEmail: email,\r\n        text: msg,\r\n      });\r\n    }\r\n    return Promise.resolve(msg);\r\n  } catch (error) {\r\n    return Promise.reject({ error });\r\n  }\r\n}\r\n\r\n/**login function */\r\n\r\nexport async function verifyPassword({ username, password }) {\r\n  try {\r\n    if (username) {\r\n      const { data } = await axios.post(\"/api/login\", { username, password });\r\n      return Promise.resolve({ data });\r\n    }\r\n  } catch (error) {\r\n    return Promise.reject({ error: \"Password doesn't Match...! \" });\r\n  }\r\n}\r\n\r\n/** update user profile function */\r\nexport async function updateUser(response) {\r\n  try {\r\n    const token = await localStorage.getItem(\"token\");\r\n    const data = await axios.put(\"/api/updateUser\", response, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    return Promise.resolve({ data });\r\n  } catch (error) {\r\n    return Promise.reject({ error: \"Couldn't Update Profile..!\" });\r\n  }\r\n}\r\n\r\n/** generate OTP */\r\nexport async function generateOTP(username) {\r\n  try {\r\n    const {\r\n      data: { code },\r\n      status,\r\n    } = await axios.get(\"/api/generateOTP\", { params: { username } });\r\n    // send mail with the OTP\r\n    if (status === 201) {\r\n      let {\r\n        data: { email },\r\n      } = await getUser({ username });\r\n      let text = `Your Password Recovery OTP is ${code}.Verify and recover your password.`;\r\n      await axios.post(\"/api/registerMail\", {\r\n        username,\r\n        userEmail: email,\r\n        text,\r\n        subject: \"Password Recovery OTP\",\r\n      });\r\n    }\r\n    return Promise.resolve(code);\r\n  } catch (error) {\r\n    return Promise.reject({ error });\r\n  }\r\n}\r\n/** verify OTP */\r\nexport async function verifyOTP({ username, code }) {\r\n  try {\r\n    const { data, status } = await axios.get(\"/api/verifyOTP\", {\r\n      params: { username, code },\r\n    });\r\n    return { data, status };\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n}\r\n\r\n/** reset password */\r\nexport async function resetPassword({ username, password }) {\r\n  try {\r\n    const { data, status } = await axios.put(\"/api/resetPassword\", {\r\n      username,\r\n      password,\r\n    });\r\n    return Promise.resolve({ data, status });\r\n  } catch (error) {\r\n    return Promise.reject({ error });\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}