{"ast":null,"code":"// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// axios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\n// /**custom hook */\n// export default function useFetch(query) {\n//   console.log(query);\n//   const [getData, setGetData] = useState({\n//     isloading: false,\n//     apiData: undefined,\n//     status: null,\n//     serverError: null,\n//   });\n//   useEffect(() => {\n//     if (!query) return;\n//     const fetchData = async () => {\n//       try {\n//         setGetData((prev) => ({\n//           ...prev,\n//           isloading: true,\n//         }));\n//         const { data, status } = await axios.get(`/api/${query}`);\n//         if (status === 201) {\n//           setGetData((prev) => ({\n//             ...prev,\n//             isloading: false,\n//           }));\n//           setGetData((prev) => ({\n//             ...prev,\n//             apiData: data,\n//             status: status,\n//           }));\n//         }\n//         setGetData((prev) => ({\n//           ...prev,\n//           isloading: false,\n//         }));\n//       } catch (error) {\n//         setGetData((prev) => ({\n//           ...prev,\n//           isloading: false,\n//           serverError: error,\n//         }));\n//       }\n//     };\n//     fetchData();\n//   }, [query]);\n\n//   return [getData, setGetData];\n// }","map":{"version":3,"names":[],"sources":["D:/Nodejs/BACKEND/ZENCLASS_NODE_TASK/RESTPASSWORD/login_app/client/src/hooks/fetchhook.js"],"sourcesContent":["// import axios from \"axios\";\r\n// import { useEffect, useState } from \"react\";\r\n// axios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\r\n// /**custom hook */\r\n// export default function useFetch(query) {\r\n//   console.log(query);\r\n//   const [getData, setGetData] = useState({\r\n//     isloading: false,\r\n//     apiData: undefined,\r\n//     status: null,\r\n//     serverError: null,\r\n//   });\r\n//   useEffect(() => {\r\n//     if (!query) return;\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         setGetData((prev) => ({\r\n//           ...prev,\r\n//           isloading: true,\r\n//         }));\r\n//         const { data, status } = await axios.get(`/api/${query}`);\r\n//         if (status === 201) {\r\n//           setGetData((prev) => ({\r\n//             ...prev,\r\n//             isloading: false,\r\n//           }));\r\n//           setGetData((prev) => ({\r\n//             ...prev,\r\n//             apiData: data,\r\n//             status: status,\r\n//           }));\r\n//         }\r\n//         setGetData((prev) => ({\r\n//           ...prev,\r\n//           isloading: false,\r\n//         }));\r\n//       } catch (error) {\r\n//         setGetData((prev) => ({\r\n//           ...prev,\r\n//           isloading: false,\r\n//           serverError: error,\r\n//         }));\r\n//       }\r\n//     };\r\n//     fetchData();\r\n//   }, [query]);\r\n\r\n//   return [getData, setGetData];\r\n// }\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}