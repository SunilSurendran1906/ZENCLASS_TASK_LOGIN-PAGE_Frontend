{"ast":null,"code":"var _s = $RefreshSig$();\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// axios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\n// /**custom hook */\n// export default function useFetch(query) {\n//   console.log(query);\n//   const [getData, setGetData] = useState({\n//     isloading: false,\n//     apiData: undefined,\n//     status: null,\n//     serverError: null,\n//   });\n//   useEffect(() => {\n//     if (!query) return;\n//     const fetchData = async () => {\n//       try {\n//         setGetData((prev) => ({\n//           ...prev,\n//           isloading: true,\n//         }));\n//         const { data, status } = await axios.get(`/api/${query}`);\n//         if (status === 201) {\n//           setGetData((prev) => ({\n//             ...prev,\n//             isloading: false,\n//           }));\n//           setGetData((prev) => ({\n//             ...prev,\n//             apiData: data,\n//             status: status,\n//           }));\n//         }\n//         setGetData((prev) => ({\n//           ...prev,\n//           isloading: false,\n//         }));\n//       } catch (error) {\n//         setGetData((prev) => ({\n//           ...prev,\n//           isloading: false,\n//           serverError: error,\n//         }));\n//       }\n//     };\n//     fetchData();\n//   }, [query]);\n\n//   return [getData, setGetData];\n// }\n\nexport default function useFetch(query) {\n  _s();\n  const [getData, setData] = useState({\n    isLoading: false,\n    apiData: undefined,\n    status: null,\n    serverError: null\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setData(prev => ({\n          ...prev,\n          isLoading: true\n        }));\n        const {\n          username\n        } = !query ? await getUsername() : \"\";\n        const {\n          data,\n          status\n        } = !query ? await axios.get(`/api/user/${username}`) : await axios.get(`/api/${query}`);\n        if (status === 201) {\n          setData(prev => ({\n            ...prev,\n            isLoading: false\n          }));\n          setData(prev => ({\n            ...prev,\n            apiData: data,\n            status: status\n          }));\n        }\n        setData(prev => ({\n          ...prev,\n          isLoading: false\n        }));\n      } catch (error) {\n        setData(prev => ({\n          ...prev,\n          isLoading: false,\n          serverError: error\n        }));\n      }\n    };\n    fetchData();\n  }, [query]);\n  return [getData, setData];\n}\n_s(useFetch, \"o0df+obvnLcq7XwVLTEcfzFeO+U=\");","map":{"version":3,"names":["useFetch","query","_s","getData","setData","useState","isLoading","apiData","undefined","status","serverError","useEffect","fetchData","prev","username","getUsername","data","axios","get","error"],"sources":["D:/Nodejs/BACKEND/ZENCLASS_NODE_TASK/RESTPASSWORD/login_app/client/src/hooks/fetchhook.js"],"sourcesContent":["// import axios from \"axios\";\r\n// import { useEffect, useState } from \"react\";\r\n// axios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\r\n// /**custom hook */\r\n// export default function useFetch(query) {\r\n//   console.log(query);\r\n//   const [getData, setGetData] = useState({\r\n//     isloading: false,\r\n//     apiData: undefined,\r\n//     status: null,\r\n//     serverError: null,\r\n//   });\r\n//   useEffect(() => {\r\n//     if (!query) return;\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         setGetData((prev) => ({\r\n//           ...prev,\r\n//           isloading: true,\r\n//         }));\r\n//         const { data, status } = await axios.get(`/api/${query}`);\r\n//         if (status === 201) {\r\n//           setGetData((prev) => ({\r\n//             ...prev,\r\n//             isloading: false,\r\n//           }));\r\n//           setGetData((prev) => ({\r\n//             ...prev,\r\n//             apiData: data,\r\n//             status: status,\r\n//           }));\r\n//         }\r\n//         setGetData((prev) => ({\r\n//           ...prev,\r\n//           isloading: false,\r\n//         }));\r\n//       } catch (error) {\r\n//         setGetData((prev) => ({\r\n//           ...prev,\r\n//           isloading: false,\r\n//           serverError: error,\r\n//         }));\r\n//       }\r\n//     };\r\n//     fetchData();\r\n//   }, [query]);\r\n\r\n//   return [getData, setGetData];\r\n// }\r\n\r\nexport default function useFetch(query) {\r\n  const [getData, setData] = useState({\r\n    isLoading: false,\r\n    apiData: undefined,\r\n    status: null,\r\n    serverError: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setData((prev) => ({ ...prev, isLoading: true }));\r\n\r\n        const { username } = !query ? await getUsername() : \"\";\r\n\r\n        const { data, status } = !query\r\n          ? await axios.get(`/api/user/${username}`)\r\n          : await axios.get(`/api/${query}`);\r\n\r\n        if (status === 201) {\r\n          setData((prev) => ({ ...prev, isLoading: false }));\r\n          setData((prev) => ({ ...prev, apiData: data, status: status }));\r\n        }\r\n\r\n        setData((prev) => ({ ...prev, isLoading: false }));\r\n      } catch (error) {\r\n        setData((prev) => ({ ...prev, isLoading: false, serverError: error }));\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [query]);\r\n\r\n  return [getData, setData];\r\n}\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,SAASA,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,OAAO,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC;IAClCC,SAAS,EAAE,KAAK;IAChBC,OAAO,EAAEC,SAAS;IAClBC,MAAM,EAAE,IAAI;IACZC,WAAW,EAAE;EACf,CAAC,CAAC;EAEFC,SAAS,CAAC,MAAM;IACd,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFR,OAAO,CAAES,IAAI,KAAM;UAAE,GAAGA,IAAI;UAAEP,SAAS,EAAE;QAAK,CAAC,CAAC,CAAC;QAEjD,MAAM;UAAEQ;QAAS,CAAC,GAAG,CAACb,KAAK,GAAG,MAAMc,WAAW,CAAC,CAAC,GAAG,EAAE;QAEtD,MAAM;UAAEC,IAAI;UAAEP;QAAO,CAAC,GAAG,CAACR,KAAK,GAC3B,MAAMgB,KAAK,CAACC,GAAG,CAAE,aAAYJ,QAAS,EAAC,CAAC,GACxC,MAAMG,KAAK,CAACC,GAAG,CAAE,QAAOjB,KAAM,EAAC,CAAC;QAEpC,IAAIQ,MAAM,KAAK,GAAG,EAAE;UAClBL,OAAO,CAAES,IAAI,KAAM;YAAE,GAAGA,IAAI;YAAEP,SAAS,EAAE;UAAM,CAAC,CAAC,CAAC;UAClDF,OAAO,CAAES,IAAI,KAAM;YAAE,GAAGA,IAAI;YAAEN,OAAO,EAAES,IAAI;YAAEP,MAAM,EAAEA;UAAO,CAAC,CAAC,CAAC;QACjE;QAEAL,OAAO,CAAES,IAAI,KAAM;UAAE,GAAGA,IAAI;UAAEP,SAAS,EAAE;QAAM,CAAC,CAAC,CAAC;MACpD,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdf,OAAO,CAAES,IAAI,KAAM;UAAE,GAAGA,IAAI;UAAEP,SAAS,EAAE,KAAK;UAAEI,WAAW,EAAES;QAAM,CAAC,CAAC,CAAC;MACxE;IACF,CAAC;IACDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACX,KAAK,CAAC,CAAC;EAEX,OAAO,CAACE,OAAO,EAAEC,OAAO,CAAC;AAC3B;AAACF,EAAA,CAjCuBF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}