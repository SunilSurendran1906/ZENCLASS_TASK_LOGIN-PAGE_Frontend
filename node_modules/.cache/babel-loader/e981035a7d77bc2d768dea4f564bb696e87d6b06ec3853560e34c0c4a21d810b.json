{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nodejs\\\\BACKEND\\\\ZENCLASS_NODE_TASK\\\\RESTPASSWORD\\\\login_app\\\\client\\\\src\\\\components\\\\Reset.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Toaster, toast } from \"react-hot-toast\";\nimport { useFormik } from \"formik\";\nimport { resetPasswordValidation } from \"../helper/validate\";\nimport { resetPassword } from \"../helper/helper\";\nimport { useAuthStore } from \"../store/store\";\nimport { useNavigate } from \"react-router-dom\";\nimport useFetch from \"../hooks/fetchhook\";\n// style the page of Username page\nimport styles from \"../styles/Username.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reset = () => {\n  _s();\n  const {\n    username\n  } = useAuthStore(state => state.auth);\n  const navigate = useNavigate();\n  const [isLoading, apiData, status, serverError] = useFetch(\"createResetSession\");\n  useEffect(() => {\n    console.log(apiData);\n  }, []);\n  const formik = useFormik({\n    initialValues: {\n      password: \"admin@123\",\n      confirm_pwd: \"admin@123\"\n    },\n    validate: resetPasswordValidation,\n    validateOnBlur: false,\n    validateOnChange: false,\n    onSubmit: async values => {\n      // console.log(values);\n      let resetPromise = resetPassword({\n        username,\n        password: values.password\n      });\n      toast.promise(resetPromise, {\n        loading: \"Updating...\",\n        success: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Reset Successfully...!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 18\n        }, this),\n        error: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Could not Reset!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, this)\n      });\n      resetPromise.then(function () {\n        navigate(\"/password\");\n      });\n    }\n  });\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"text-2xl font-bold\",\n    children: \"isLoading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 25\n  }, this);\n  if (serverError) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"text-xl text-red-500\",\n    children: serverError.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-center\",\n      reverseOrder: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.glass,\n        style: {\n          width: \"50%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-5xl font-bold\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"py-4 text-xl w-2/3 text-center text-gray-500\",\n            children: \"Enter New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"py-20\",\n          onSubmit: formik.handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textbox flex flex-col items-center gap-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...formik.getFieldProps(\"password\"),\n              className: styles.textbox,\n              type: \"text\",\n              placeholder: \"new-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...formik.getFieldProps(\"confirm_pwd\"),\n              className: styles.textbox,\n              type: \"text\",\n              placeholder: \"re-confirm password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.btn,\n              type: \"submit\",\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Reset, \"B11znHPzDAM5/1RnDdnstX6RFDI=\", false, function () {\n  return [useAuthStore, useNavigate, useFetch, useFormik];\n});\n_c = Reset;\nexport default Reset;\nvar _c;\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"names":["React","useEffect","Toaster","toast","useFormik","resetPasswordValidation","resetPassword","useAuthStore","useNavigate","useFetch","styles","jsxDEV","_jsxDEV","Reset","_s","username","state","auth","navigate","isLoading","apiData","status","serverError","console","log","formik","initialValues","password","confirm_pwd","validate","validateOnBlur","validateOnChange","onSubmit","values","resetPromise","promise","loading","success","children","fileName","_jsxFileName","lineNumber","columnNumber","error","then","className","message","position","reverseOrder","glass","style","width","handleSubmit","getFieldProps","textbox","type","placeholder","btn","_c","$RefreshReg$"],"sources":["D:/Nodejs/BACKEND/ZENCLASS_NODE_TASK/RESTPASSWORD/login_app/client/src/components/Reset.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Toaster, toast } from \"react-hot-toast\";\r\nimport { useFormik } from \"formik\";\r\nimport { resetPasswordValidation } from \"../helper/validate\";\r\nimport { resetPassword } from \"../helper/helper\";\r\nimport { useAuthStore } from \"../store/store\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useFetch from \"../hooks/fetchhook\";\r\n// style the page of Username page\r\nimport styles from \"../styles/Username.module.css\";\r\n\r\nconst Reset = () => {\r\n  const { username } = useAuthStore((state) => state.auth);\r\n  const navigate = useNavigate();\r\n  const [isLoading, apiData, status, serverError] =\r\n    useFetch(\"createResetSession\");\r\n\r\n  useEffect(() => {\r\n    console.log(apiData);\r\n  }, []);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      password: \"admin@123\",\r\n      confirm_pwd: \"admin@123\",\r\n    },\r\n    validate: resetPasswordValidation,\r\n    validateOnBlur: false,\r\n    validateOnChange: false,\r\n    onSubmit: async (values) => {\r\n      // console.log(values);\r\n      let resetPromise = resetPassword({\r\n        username,\r\n        password: values.password,\r\n      });\r\n\r\n      toast.promise(resetPromise, {\r\n        loading: \"Updating...\",\r\n        success: <b>Reset Successfully...!</b>,\r\n        error: <b>Could not Reset!</b>,\r\n      });\r\n\r\n      resetPromise.then(function () {\r\n        navigate(\"/password\");\r\n      });\r\n    },\r\n  });\r\n  if (isLoading) return <h1 className=\"text-2xl font-bold\">isLoading</h1>;\r\n  if (serverError)\r\n    return <h1 className=\"text-xl text-red-500\">{serverError.message}</h1>;\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <Toaster position=\"top-center\" reverseOrder={false}></Toaster>\r\n\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <div className={styles.glass} style={{ width: \"50%\" }}>\r\n          <div className=\"title flex flex-col items-center\">\r\n            <h4 className=\"text-5xl font-bold\">Reset</h4>\r\n            <span className=\"py-4 text-xl w-2/3 text-center text-gray-500\">\r\n              Enter New Password\r\n            </span>\r\n          </div>\r\n\r\n          <form className=\"py-20\" onSubmit={formik.handleSubmit}>\r\n            <div className=\"textbox flex flex-col items-center gap-6\">\r\n              <input\r\n                {...formik.getFieldProps(\"password\")}\r\n                className={styles.textbox}\r\n                type=\"text\"\r\n                placeholder=\"new-password\"\r\n              />\r\n              <input\r\n                {...formik.getFieldProps(\"confirm_pwd\")}\r\n                className={styles.textbox}\r\n                type=\"text\"\r\n                placeholder=\"re-confirm password\"\r\n              />\r\n              <button className={styles.btn} type=\"submit\">\r\n                Reset\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reset;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}