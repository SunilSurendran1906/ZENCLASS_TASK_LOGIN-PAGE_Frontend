{"ast":null,"code":"import toast from \"react-hot-toast\";\nimport { aunthenticate } from \"./helper\";\n\n// validate login page username\nexport async function usernameVaildate(values) {\n  const error = usernameVerify({}, values);\n  if (values.username) {\n    // check user exist or not\n    const {\n      status\n    } = await aunthenticate(values.username);\n    if (status !== 200) {\n      error.exist = t;\n    }\n  }\n  return error;\n}\n\n/** validate password */\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\n\n// validate reset password\n\nexport async function resetPasswordValidateion(values) {\n  const errors = passwordVerify({}, values);\n  if (values.password !== values.confirm_pwd) {\n    errors.exist = toast.error(\"Password not match...!\");\n  }\n}\n\n//** validate register form */\n\nexport async function registerValidation(values) {\n  const errors = usernameVerify({}, values);\n  passwordVerify(errors, values);\n  emailVerify(errors, values);\n  return errors;\n}\n\n//** validate profile page */\n\nexport async function profileValidation(values) {\n  const errors = emailVerify({}, values);\n  return errors;\n}\n\n/*******************************/\n\n/** validate password */\nfunction passwordVerify(errors = {}, values) {\n  /* eslint-disable no-useless-escape */\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required...!\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"Wrong Password...!\");\n  } else if (values.password.length < 4) {\n    errors.password = toast.error(\"Password must be more than 4 characters long\");\n  } else if (!specialChars.test(values.password)) {\n    errors.password = toast.error(\"Password must have special character\");\n  }\n  return errors;\n}\n\n// validate username\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = toast.error(\"Username Required...!\");\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error(\"Invalid Username...!\");\n  }\n  return error;\n}\n//** validate email */\n\nfunction emailVerify(error = {}, values) {\n  if (!values.email) {\n    error.email = toast.error(\"Email is Required..!\");\n  } else if (values.email.includes(\"\")) {\n    error.email = toast.error(\"Wrong Email...!\");\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    error.email = toast.error(\"Invalid email address..!\");\n  }\n  return error;\n}","map":{"version":3,"names":["toast","aunthenticate","usernameVaildate","values","error","usernameVerify","username","status","exist","t","passwordValidate","errors","passwordVerify","resetPasswordValidateion","password","confirm_pwd","registerValidation","emailVerify","profileValidation","specialChars","includes","length","test","email"],"sources":["D:/Nodejs/BACKEND/ZENCLASS_NODE_TASK/RESTPASSWORD/login_app/client/src/helper/validate.js"],"sourcesContent":["import toast from \"react-hot-toast\";\r\nimport { aunthenticate } from \"./helper\";\r\n\r\n// validate login page username\r\nexport async function usernameVaildate(values) {\r\n  const error = usernameVerify({}, values);\r\n  if (values.username) {\r\n    // check user exist or not\r\n    const { status } = await aunthenticate(values.username);\r\n\r\n    if(status !==200){\r\n      error.exist=t\r\n    }\r\n  }\r\n  return error;\r\n}\r\n\r\n/** validate password */\r\nexport async function passwordValidate(values) {\r\n  const errors = passwordVerify({}, values);\r\n\r\n  return errors;\r\n}\r\n\r\n// validate reset password\r\n\r\nexport async function resetPasswordValidateion(values) {\r\n  const errors = passwordVerify({}, values);\r\n  if (values.password !== values.confirm_pwd) {\r\n    errors.exist = toast.error(\"Password not match...!\");\r\n  }\r\n}\r\n\r\n//** validate register form */\r\n\r\nexport async function registerValidation(values) {\r\n  const errors = usernameVerify({}, values);\r\n  passwordVerify(errors, values);\r\n  emailVerify(errors, values);\r\n  return errors;\r\n}\r\n\r\n//** validate profile page */\r\n\r\nexport async function profileValidation(values) {\r\n  const errors = emailVerify({}, values);\r\n  return errors;\r\n}\r\n\r\n/*******************************/\r\n\r\n/** validate password */\r\nfunction passwordVerify(errors = {}, values) {\r\n  /* eslint-disable no-useless-escape */\r\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n\r\n  if (!values.password) {\r\n    errors.password = toast.error(\"Password Required...!\");\r\n  } else if (values.password.includes(\" \")) {\r\n    errors.password = toast.error(\"Wrong Password...!\");\r\n  } else if (values.password.length < 4) {\r\n    errors.password = toast.error(\r\n      \"Password must be more than 4 characters long\"\r\n    );\r\n  } else if (!specialChars.test(values.password)) {\r\n    errors.password = toast.error(\"Password must have special character\");\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\n// validate username\r\nfunction usernameVerify(error = {}, values) {\r\n  if (!values.username) {\r\n    error.username = toast.error(\"Username Required...!\");\r\n  } else if (values.username.includes(\" \")) {\r\n    error.username = toast.error(\"Invalid Username...!\");\r\n  }\r\n\r\n  return error;\r\n}\r\n//** validate email */\r\n\r\nfunction emailVerify(error = {}, values) {\r\n  if (!values.email) {\r\n    error.email = toast.error(\"Email is Required..!\");\r\n  } else if (values.email.includes(\"\")) {\r\n    error.email = toast.error(\"Wrong Email...!\");\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    error.email = toast.error(\"Invalid email address..!\");\r\n  }\r\n  return error;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}