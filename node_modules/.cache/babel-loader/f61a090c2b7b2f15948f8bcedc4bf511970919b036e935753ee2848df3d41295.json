{"ast":null,"code":"// import React, { useEffect } from \"react\";\n// import { Toaster, toast } from \"react-hot-toast\";\n// import { useFormik } from \"formik\";\n// import { resetPasswordValidation } from \"../helper/validate\";\n// import { resetPassword } from \"../helper/helper\";\n// import { useAuthStore } from \"../store/store\";\n// import { useNavigate, Navigate } from \"react-router-dom\";\n// import useFetch from \"../hooks/fetchhook\";\n// // style the page of Username page\n// import styles from \"../styles/Username.module.css\";\n\n// const Reset = () => {\n//   const { username } = useAuthStore((state) => state.auth);\n//   const navigate = useNavigate();\n//   const [isLoading, apiData, status, serverError] =\n//     useFetch(\"createResetSession\");\n\n//   const formik = useFormik({\n//     initialValues: {\n//       password: \"admin@123\",\n//       confirm_pwd: \"admin@123\",\n//     },\n//     validate: resetPasswordValidation,\n//     validateOnBlur: false,\n//     validateOnChange: false,\n//     onSubmit: async (values) => {\n//       // console.log(values);\n//       let resetPromise = resetPassword({\n//         username,\n//         password: values.password,\n//       });\n\n//       toast.promise(resetPromise, {\n//         loading: \"Updating...\",\n//         success: <b>Reset Successfully...!</b>,\n//         error: <b>Could not Reset!</b>,\n//       });\n\n//       resetPromise.then(function () {\n//         navigate(\"/password\");\n//       });\n//     },\n//   });\n\n//   if (isLoading) return <h1 className=\"text-2xl font-bold\">isLoading</h1>;\n//   if (serverError)\n//     return <h1 className=\"text-xl text-red-500\">{serverError.message}</h1>;\n//   if (status && status !== 201)\n//     return <Navigate to={\"/password\"} replace={true}></Navigate>;\n//   return (\n//     <div className=\"container mx-auto\">\n//       <Toaster position=\"top-center\" reverseOrder={false}></Toaster>\n\n//       <div className=\"flex justify-center items-center h-screen\">\n//         <div className={styles.glass} style={{ width: \"50%\" }}>\n//           <div className=\"title flex flex-col items-center\">\n//             <h4 className=\"text-5xl font-bold\">Reset</h4>\n//             <span className=\"py-4 text-xl w-2/3 text-center text-gray-500\">\n//               Enter New Password\n//             </span>\n//           </div>\n\n//           <form className=\"py-20\" onSubmit={formik.handleSubmit}>\n//             <div className=\"textbox flex flex-col items-center gap-6\">\n//               <input\n//                 {...formik.getFieldProps(\"password\")}\n//                 className={styles.textbox}\n//                 type=\"text\"\n//                 placeholder=\"new-password\"\n//               />\n//               <input\n//                 {...formik.getFieldProps(\"confirm_pwd\")}\n//                 className={styles.textbox}\n//                 type=\"text\"\n//                 placeholder=\"re-confirm password\"\n//               />\n//               <button className={styles.btn} type=\"submit\">\n//                 Reset\n//               </button>\n//             </div>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Reset;","map":{"version":3,"names":[],"sources":["D:/Nodejs/BACKEND/ZENCLASS_NODE_TASK/RESTPASSWORD/login_app/client/src/components/Reset.js"],"sourcesContent":["// import React, { useEffect } from \"react\";\r\n// import { Toaster, toast } from \"react-hot-toast\";\r\n// import { useFormik } from \"formik\";\r\n// import { resetPasswordValidation } from \"../helper/validate\";\r\n// import { resetPassword } from \"../helper/helper\";\r\n// import { useAuthStore } from \"../store/store\";\r\n// import { useNavigate, Navigate } from \"react-router-dom\";\r\n// import useFetch from \"../hooks/fetchhook\";\r\n// // style the page of Username page\r\n// import styles from \"../styles/Username.module.css\";\r\n\r\n// const Reset = () => {\r\n//   const { username } = useAuthStore((state) => state.auth);\r\n//   const navigate = useNavigate();\r\n//   const [isLoading, apiData, status, serverError] =\r\n//     useFetch(\"createResetSession\");\r\n\r\n//   const formik = useFormik({\r\n//     initialValues: {\r\n//       password: \"admin@123\",\r\n//       confirm_pwd: \"admin@123\",\r\n//     },\r\n//     validate: resetPasswordValidation,\r\n//     validateOnBlur: false,\r\n//     validateOnChange: false,\r\n//     onSubmit: async (values) => {\r\n//       // console.log(values);\r\n//       let resetPromise = resetPassword({\r\n//         username,\r\n//         password: values.password,\r\n//       });\r\n\r\n//       toast.promise(resetPromise, {\r\n//         loading: \"Updating...\",\r\n//         success: <b>Reset Successfully...!</b>,\r\n//         error: <b>Could not Reset!</b>,\r\n//       });\r\n\r\n//       resetPromise.then(function () {\r\n//         navigate(\"/password\");\r\n//       });\r\n//     },\r\n//   });\r\n\r\n//   if (isLoading) return <h1 className=\"text-2xl font-bold\">isLoading</h1>;\r\n//   if (serverError)\r\n//     return <h1 className=\"text-xl text-red-500\">{serverError.message}</h1>;\r\n//   if (status && status !== 201)\r\n//     return <Navigate to={\"/password\"} replace={true}></Navigate>;\r\n//   return (\r\n//     <div className=\"container mx-auto\">\r\n//       <Toaster position=\"top-center\" reverseOrder={false}></Toaster>\r\n\r\n//       <div className=\"flex justify-center items-center h-screen\">\r\n//         <div className={styles.glass} style={{ width: \"50%\" }}>\r\n//           <div className=\"title flex flex-col items-center\">\r\n//             <h4 className=\"text-5xl font-bold\">Reset</h4>\r\n//             <span className=\"py-4 text-xl w-2/3 text-center text-gray-500\">\r\n//               Enter New Password\r\n//             </span>\r\n//           </div>\r\n\r\n//           <form className=\"py-20\" onSubmit={formik.handleSubmit}>\r\n//             <div className=\"textbox flex flex-col items-center gap-6\">\r\n//               <input\r\n//                 {...formik.getFieldProps(\"password\")}\r\n//                 className={styles.textbox}\r\n//                 type=\"text\"\r\n//                 placeholder=\"new-password\"\r\n//               />\r\n//               <input\r\n//                 {...formik.getFieldProps(\"confirm_pwd\")}\r\n//                 className={styles.textbox}\r\n//                 type=\"text\"\r\n//                 placeholder=\"re-confirm password\"\r\n//               />\r\n//               <button className={styles.btn} type=\"submit\">\r\n//                 Reset\r\n//               </button>\r\n//             </div>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Reset;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}